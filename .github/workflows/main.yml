name: Android CI
env:
    TZ: Asia/Shanghai

on:
  push:
    tags:
      - '*'
    branches:
      - '*'
    paths-ignore:
      - '.github/workflows/*'
      - '!.github/workflows/main.yml'
  pull_request:
    paths-ignore:
      - '.github/workflows/*'
      - '!.github/workflows/main.yml'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: init custom env
      run: |
          BUILD_NAME="${GITHUB_REPOSITORY#*/}"
          if [[ ${GITHUB_REF} == refs/tags* ]]
          then
              BUILD_VERSION=${GITHUB_REF#refs/tags/}
          else
              echo PRE_RELEASE="true" >> .custom_env
              BUILD_VERSION="$(date +'%Y%m%d%H%M%S')"
          fi
          BUILD_NAME_WITH_VERSION="$BUILD_NAME-$BUILD_VERSION"
          echo BUILD_NAME="$BUILD_NAME" >> .custom_env
          echo BUILD_VERSION="$BUILD_VERSION" >> .custom_env
          echo BUILD_NAME_WITH_VERSION="$BUILD_NAME_WITH_VERSION" >> .custom_env
          cat .custom_env
          cat .custom_env >> $GITHUB_ENV
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Gradle
      run: ./gradlew assembleRelease
    - uses: AoEiuV020/sign-android-release@v2
      name: Sign app APK
      env:
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      if: ${{ env.SIGNING_KEY != '' }}
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
    - name: pick release file
      run: |
        find ./app/build/outputs/
        find ./app/build/outputs -name '*.apk' -exec mv {} $BUILD_NAME_WITH_VERSION-android.apk \;
        find ./app/build/outputs -name 'mapping.txt' -exec mv {} $BUILD_NAME_WITH_VERSION-android-mapping.txt \;
    - name: Upload APK
      uses: actions/upload-artifact@master
      with:
        name: android-build
        path: ${{ env.BUILD_NAME_WITH_VERSION }}-android.apk
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.BUILD_VERSION }}
        release_name: ${{ env.BUILD_VERSION }}
        body: ${{ github.event.commits[0].message }}
        draft: true
        prerelease: ${{ env.PRE_RELEASE == 'true' }}
    - name: Upload Release Asset android
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.BUILD_NAME_WITH_VERSION }}-android.apk
        asset_name: ${{ env.BUILD_NAME_WITH_VERSION }}-android.apk
        asset_content_type: application/zip
    - name: Upload android mapping
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.BUILD_NAME_WITH_VERSION }}-android-mapping.txt
        asset_name: ${{ env.BUILD_NAME_WITH_VERSION }}-android-mapping.txt
        asset_content_type: text/plain
    - name: public release
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
